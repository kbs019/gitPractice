<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ex.gitprac.repository.rec.RecMapper">

  <insert id="insertRec" parameterType="com.ex.gitprac.data.rec.RecDTO">
    <selectKey keyProperty="recNo" resultType="int" order="BEFORE">
      SELECT rec_seq.NEXTVAL FROM dual
    </selectKey>
    INSERT INTO rec (
      recNo, writer, petNo, category, title, content, reg,
      orgImgName, imgName, imgPath
    ) VALUES (
      #{recNo}, #{writer}, #{petNo}, #{category}, #{title}, #{content}, SYSDATE,
      #{orgImgName, jdbcType=VARCHAR},
      #{imgName, jdbcType=VARCHAR},
      #{imgPath, jdbcType=VARCHAR}
    )
  </insert>

  <select id="findAll" resultType="com.ex.gitprac.data.rec.RecDTO">
    SELECT
      recNo,
      writer,
      petNo,
      category,
      title,
      content,
      reg
    FROM rec
    ORDER BY reg DESC
  </select>

  <select id="findFiltered" resultType="com.ex.gitprac.data.rec.RecDTO">
    SELECT
      recNo,
      writer,
      petNo,
      category,
      title,
      content,
      reg
    FROM rec
    <where>
      <if test="petNo != null">
        petNo = #{petNo}
      </if>
      <if test="startDate != null and startDate != '1900-01-01' 
          and endDate != null and endDate != '2100-12-31'">
          <![CDATA[
          AND reg >= TO_DATE(#{startDate}, 'YYYY-MM-DD')
          AND reg < TO_DATE(#{endDate}, 'YYYY-MM-DD') + 1
        ]]>
      </if>
      <if test="categoryGroup != null and categoryGroup != ''">
        AND category IN
        <choose>
          <when test="categoryGroup == '밥/간식'">
            ('밥', '간식')
          </when>
          <when test="categoryGroup == '배변/배뇨'">
            ('배변', '배뇨')
          </when>
          <when test="categoryGroup == '병원/약'">
            ('병원', '약')
          </when>
          <when test="categoryGroup == '활동'">
            ('활동')
          </when>
        </choose>
      </if>
    </where>
    ORDER BY reg DESC
  </select>

  <!-- ✅ 1. 작성자 기준 전체 조회 -->
  <select id="findAllByWriter" parameterType="string" resultType="com.ex.gitprac.data.rec.RecDTO">
    SELECT *
    FROM rec
    WHERE writer = #{writer}
    ORDER BY reg DESC
  </select>

  <!-- ✅ 2. 작성자 기준 + 필터 조회 -->
  <select id="findFilteredByWriter" parameterType="map" resultType="com.ex.gitprac.data.rec.RecDTO">
    SELECT *
    FROM rec
    <where>
      writer = #{writer}
      
      <if test="petNo != null">
        AND petNo = #{petNo}
      </if>

      <if test="startDate != null and startDate != '1900-01-01'
          and endDate != null and endDate != '2100-12-31'">
        <![CDATA[
        AND reg >= TO_DATE(#{startDate}, 'YYYY-MM-DD')
        AND reg < TO_DATE(#{endDate}, 'YYYY-MM-DD') + 1
        ]]>
      </if>

      <if test="categoryGroup != null and categoryGroup != ''">
        AND category IN
        <choose>
          <when test="categoryGroup == '밥/간식'">
            ('밥', '간식')
          </when>
          <when test="categoryGroup == '배변/배뇨'">
            ('배변', '배뇨')
          </when>
          <when test="categoryGroup == '병원/약'">
            ('병원', '약')
          </when>
          <when test="categoryGroup == '활동'">
            ('활동')
          </when>
        </choose>
      </if>
    </where>
    ORDER BY reg DESC
  </select>

  <select id="findByNo" resultType="com.ex.gitprac.data.rec.RecDTO">
    SELECT * FROM rec WHERE recNo = #{recNo}
  </select>

  <update id="updateRec" parameterType="com.ex.gitprac.data.rec.RecDTO">
    UPDATE rec
    SET title = #{title}, content = #{content}
    WHERE recNo = #{recNo}
  </update>

  <delete id="deleteRec" parameterType="int">
    DELETE FROM rec
    WHERE recNo = #{recNo}
  </delete>

  <select id="findRecListWithPaging" resultType="com.ex.gitprac.data.rec.RecDTO">
    SELECT *
    FROM rec
    ORDER BY reg DESC
    OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
  </select>

</mapper>
